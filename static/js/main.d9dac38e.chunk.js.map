{"version":3,"sources":["GoodsList/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","goods","map","good","key","defaultProps","goodsFromServer","App","state","isVisible","sortBy","isReversed","setProductLength","visibleHandler","setState","sortAlphab","reset","isRequired","sortLength","reverse","this","visibleGoods","filter","length","sort","good1","good2","localeCompare","className","name","value","onChange","event","target","onClick","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAIaA,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,SAYTH,EAAUK,aAAe,CACvBJ,MAAO,IChBT,IAAMK,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmJaC,E,4MA/IbC,MAAQ,CACNP,MAAOK,EACPG,WAAW,EACXC,OAAQ,GACRC,YAAY,EACZC,iBAAkB,G,EAGpBC,eAAiB,WACf,EAAKC,SAAS,CACZL,WAAW,K,EAIfM,WAAa,kBACX,EAAKD,SAAS,CACZJ,OAAQ,S,EAIZM,MAAQ,kBACN,EAAKF,SAAS,CACZG,YAAY,EACZP,OAAQ,GACRE,iBAAkB,K,EAItBM,WAAa,kBACX,EAAKJ,SAAS,CACZJ,OAAQ,S,EAIZS,QAAU,kBACR,EAAKL,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,4CAIvB,WAAU,IAAD,OACP,EAAuDS,KAAKZ,MAApDC,EAAR,EAAQA,UAAWR,EAAnB,EAAmBA,MAAOS,EAA1B,EAA0BA,OAAQE,EAAlC,EAAkCA,iBAC5BS,EAAe,YAAIpB,GAAOqB,QAAO,SAAAnB,GAAI,OAAIA,EAAKoB,QAAUX,KAoB9D,OAjBAS,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,IAAK,GACH,OACF,IAAK,MACH,OAAOe,EAAME,cAAcD,GAC7B,IAAK,MACH,OAAOD,EAAMF,OAASG,EAAMH,OAC9B,QACE,OAAO,MAITH,KAAKZ,MAAMG,YACbU,EAAaF,UAIb,yBAAKS,UAAU,OAEXnB,EAQA,yBAAKmB,UAAU,kBACX,qCAEA,wDAEE,4BACEC,KAAK,iBACLC,MAAOlB,EACPmB,SAAU,SAACC,GACX,EAAKlB,SAAS,CACZF,kBAAmBoB,EAAMC,OAAOH,UAGlC,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,OAGF,4BAAQI,QAASd,KAAKJ,OAAtB,UAOJ,4BACImB,KAAK,SACLD,QAASd,KAAKD,SAFlB,WAOA,4BACIgB,KAAK,SACLD,QAASd,KAAKL,YAFlB,iBAcA,4BACIoB,KAAK,SACLD,QAASd,KAAKF,YAFlB,kBAOE,kBAAC,EAAD,CAAWjB,MAAOoB,KAnEtB,4BACEc,KAAK,SACLD,QAASd,KAAKP,gBAFhB,c,GAnEQuB,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d9dac38e.chunk.js","sourcesContent":["// /* eslint-disable */\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: propTypes.arrayOf(\n    propTypes.string.isRequired,\n  ),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n};\n\n/* export const GoodsList = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n\nGoodsList.propTypes = {\n  goods: propTypes.arrayOf({\n    good: propTypes.string.isRequired,\n  }),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n}; */\n","/* eslint-disable */\nimport React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    isVisible: false,\n    sortBy: '',\n    isReversed: false,\n    setProductLength: 1,\n  }\n\n  visibleHandler = () => {  //для кнопки старт\n    this.setState({\n      isVisible: true,\n    })\n  }\n\n  sortAlphab = () => (  //в стейт условие для сотрир по алфавиту\n    this.setState({\n      sortBy: 'abc',\n    })\n  )\n\n  reset = () => (  //в стейт сброс условий\n    this.setState({\n      isRequired: false,\n      sortBy: '',\n      setProductLength: 1,\n    })\n  )\n\n  sortLength = () => (  //в стейт условие для сотрир по длине\n    this.setState({\n      sortBy: '123',\n    })\n  )\n\n  reverse = () => (  //в стейт условие для реверса\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  )\n\n  render() {\n    const { isVisible, goods, sortBy, setProductLength } = this.state;\n    const visibleGoods = [...goods].filter(good => good.length >= setProductLength);\n\n    //сортируем в зависимости от условия\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case '':\n          return;\n        case 'abc':\n          return good1.localeCompare(good2);\n        case '123':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (this.state.isReversed) {  //включаем reverse если isReversed в стейте тру\n      visibleGoods.reverse()\n    }\n      \n    return (\n      <div className=\"App\">\n{/*         если isVisible не тру, то рендерится кнопка, если тру - то верстка */}\n        {!isVisible ? (\n          <button\n            type=\"button\"\n            onClick={this.visibleHandler}\n          >\n            Start\n          </button>\n        ) : (\n          <div className=\"goods__wrapper\">\n              <h1>Goods</h1>\n\n              <div>\n                {`Set product length here `}\n                <select\n                  name=\"product-length\"\n                  value={setProductLength}\n                  onChange={(event) => {\n                  this.setState({\n                    setProductLength: +event.target.value,\n                  })\n                }}>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                  <option value=\"10\">10</option>\n                </select>\n\n                <button onClick={this.reset}>\n                  Reset\n                </button>\n              </div>\n              \n\n              \n            <button\n                type=\"button\"\n                onClick={this.reverse}\n            >\n              Reverse\n            </button>\n              \n            <button\n                type=\"button\"\n                onClick={this.sortAlphab}\n            >\n              Sort Alphabet\n            </button>\n            \n            {/* <button\n                type=\"button\"\n                onClick={this.reset}\n            >\n              Reset\n            </button> */}\n            \n            <button\n                type=\"button\"\n                onClick={this.sortLength}\n            >\n              Sort by length\n            </button>\n              \n              <GoodsList goods={visibleGoods} />\n          </div>\n        )}\n\n      </div>\n    )\n  }\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}